Diagnostic logging means detailed logging to improve the overall feature of the application.

Type	                     Platform	     Location	                        Purpose
Application Logging          Windows/Linux	 File System / Azure Blob Storage	Logs from application code (errors, info, etc.)
Web Server Logging	         Windows only	 File System / Azure Blob Storage	Logs raw HTTP request data (W3C format)
Detailed Error Logging	     Windows only	 File System	                    Captures detailed errors for failed requests
Deployment Logging	         Windows/Linux	 Azure DevOps/Deployment Center     Logs deployment activities


Filesystem: Temporary logging for debugging purposes; automatically turns off after 12 hours.
Blob Storage: Suitable for long-term logging; requires a blob storage container to store logs.

When to Use:
Filesystem: For short-term debugging.
Blob Storage: For persistent storage and historical log analysis.

Filesystem:
Temporary storage; logs auto-delete after 12 hours.
Useful for real-time troubleshooting; download logs as ZIP files

Add log messages in code a .net application use class S
System.Diagnostics.Trace.TraceError("If you're seeing this, something bad happened");

Streaming and Accessing Log
az webapp log tail --name <webappname> --resource-group <resource-group-name>


Logs stored in /LogFiles directory can be downloaded.


Which of the following statements are true for application logging?
Only .NET application logs can be written to the blob storage
You can use other Azure services for logging and monitoring
App Service file system (Filesystem) will turn itself off in 12 hours
Blob storage is for long-term logging
Logs can be retained for specified amount of days
For logs stored in the App Service file system, you can download the ZIP file in the browser

