Azcopy commandline tool for copying uploading deleting files or blobs between storage accounts
azcopy copy --> to copy
azcopy remove --> remove a blob r file

./azcopy copy sourceurl desturl

the url contians SAS SHARED ACCESS SIGNATURE https://ronstorageaccount.blob.core.windows.net/aprildoc?sv=2021
Sas gives access to storage accounts for a limted amount of time
u can generate this by urseld
the storage explorer generated by itself one for surce and for dest

Azure Active Directory
if u have an azure active directory u dont need sas
but u need or ur account needs
storage blob data contributor role for source and destination to copy files or use azopy

To check ur role
got to storage account ==> access control IAM ==? view my access --> i

===================== AzCopy command Cli ===================================
azcpy login
then authenticate

azcopy copy <source-url> <dest-url> --overwrite=prompt
{this command will overwrite our blob in the dest so it will ask us do we need to overwrite} ??
eg
azcopy copy https://<storage-aacount>/<container>/blob <dest-url>

azcopy copy -h --> shows all the other options in azcopy

Azure Storage Explorer easy to use
azcopy is diff ,, but u can customize ur scripts, use aazure storage client libraries in ur code

Questions
What are two valid authentication methods when copying a blob from a container to another in Azure Blob Storage? (Choose 2 answers.)
A Microsoft Entra account with a Storage Blob Data Contributor role:
The Storage Blob Data Contributor SDBC role allows for read/write/delete operations on blob data.
This would be necessary to both read the data from the source and write to the destination.

One shared access signature (SAS) for the source container and a separate SAS for the destination container:
A Shared Access Signature (SAS) provides secure delegated access to resources in your storage account.
If you're copying blobs, you would typically require read permissions on the source container (through a SAS)
and write permissions on the destination container (through another SAS).

The "Storage Blob Data Viewer" role only allows for reading blob data and wouldn't be sufficient for writing to the destination container.
 Similarly, having one SAS for both the source and destination containers might not be practical,
  as the necessary permissions for each container might differ.

  If you need to automate your copying activities, then you can write scripts that contain AzCopy commands.
   It's also possible to do it by calling the Azure Storage Client Libraries in your code.
   They're available for a variety of languages such as .NET, Java, and Python.

   easy to difficult
   Azure Storage Explorer, AzCopy, Azure Storage client libraries
