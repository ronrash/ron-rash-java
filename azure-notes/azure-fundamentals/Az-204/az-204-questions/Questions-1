You are creating an Azure key vault using PowerShell.
Objects deleted from the key vault must be kept for a set period of 90 days.
EnablePurgeProtection - data cannot be deleted from the key-valut until the purge expiration period
EnableSoftDelete - which allows the key vault to retain deleted objects
for a specified period of time (90 days in this case) before they are permanently deleted.


You want to implement Azure Search to allow the application to search the index by using various criteria to locate documents related to accommodation.
You want the application to allow customers to search the index by using regular expressions. ?

Configure the QueryType property of the SearchParameters class
QueryType Property gets or sets a value that specifies the syntax of the search query.
You can write queries against Azure Search based on the rich
Lucene Query Parser syntax for specialized query forms: wildcard, fuzzy search, proximity search,
regular expressions are a few examples.

3. You are a developer at your company.
   You need to update the definitions for an existing Logic App.
   What should you use?

   the Logic App Code View
   Edit JSON - Azure portal -
   1. Sign in to the Azure portal.
   2. From the left menu, choose All services. In the search box, find "logic apps", and then from the results, select your logic app.
   3. On your logic app's menu, under Development Tools, select Logic App Code View.
   4. The Code View editor opens and shows your logic app definition in JSON format.

4. API back end is hosted in an Azure App Service instance. You have implemented a RESTful service for the API back end.
   You must configure back-end authentication for the API Management service instance.
   Solution: You configure Basic gateway credentials for the Azure resource. No this does not meet the requirement

   API Management allows to secure access to the back-end service of an API using client certificates not gateway credentials

   Same question -another solution this is also not correct - You configure Client cert gateway credentials for the HTTP(s) endpoint.

   Some solutions are
   OAuth2.0/JWT validation: Many modern APIs use OAuth2.0 tokens or JSON Web Tokens (JWT) for authentication and authorization.
   Backend authentication policies: In Azure API Management, you can configure policies to enforce authentication mechanisms such
                                    as validating incoming tokens, forwarding tokens, or performing additional checks.
   Azure Active Directory (AAD): If using Azure services, integrating with Azure AD for authentication can be a robust solution.


5. You create the index in Azure Search. You now need to use the Azure Search .NET SDK to import the relevant data into the Azure Search service.
   Which three actions should you perform in sequence?
   STEPS
   Create a searchIndexClinet object to connect to search index
   create a indexbatch so that documents that are to be searched are added
   call the documents.Index method of the searchIndexClient and pass the index batch


6 You are developing an application that applies a set of governance policies for internal and external services, as well as for applications.
  You develop a stateful ASP.NET Core 2.1 web application named PolicyApp and deploy it to an Azure App Service Web App. The PolicyApp reacts to events from
  Azure Event Grid and performs policy actions based on those events.
  You have the following requirements:
  ✑ Authentication events must be used to monitor users when they sign in and sign out.
  ✑ All authentication events must be processed by PolicyApp.
  ✑ Sign outs must be processed as fast as possible.
  What should you do?

  Add a subject prefix to sign-out events. Create an Azure Event Grid subscription. Configure the subscription to use the subjectBeginsWith filter

  Explanation:
  Add a Subject Prefix to Sign-Out Events:
  By adding a subject prefix to sign-out events (e.g., "SignOut_"), you can distinguish these events from others.
  Create an Azure Event Grid Subscription with Filter:

  Create a subscription that filters events based on the subject prefix using the subjectBeginsWith filter.
  This ensures that only sign-out events are processed by this subscription, allowing them to be handled as quickly
   as possible without interference from other events.

   to create a template spec
   az ts create
    --name webspec
